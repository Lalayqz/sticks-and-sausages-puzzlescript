title Stick and Sausages
author Lala_yqz

sprite_size 10x10
background_color #211209
text_color #e3c4d7
key_repeat_interval 0.18
again_interval 0.15
level_select
level_select_solve_symbol ✓
level_select_lock
level_select_unlocked_rollover 3
run_rules_on_level_start
//

====
TAGS
====

pushable_type = stick sausage
is_tip_or_packed = tip_or_packed not_tip_or_packed
is_corner = corner not_corner
clock_directions = clockwise counterclockwise

fixed_type = ground grill
floor = floor_0 floor_1 floor_2
low_floor = floor_0 floor_1
high_floor = floor_1 floor_2
floor_x = floor

force_type = simple slip insert
force_type_simple_or_slip = simple slip
is_countered = uncountered countered

which_space = this_space next_space

pushable_type_2 = pushable_type
is_tip_or_packed_2 = is_tip_or_packed
directions_2 = directions
force_type_2 = force_type

again_round_type = grill fall pack
count = 0 1 2 3 4 5 6 7 8 9
low_count = 0 1 2 3 4 5 6 7 8

========
MAPPINGS
========

directions => opposite_direction
up down left right -> down up right left

directions => clockwise_direction
up right down left -> right down left up

directions => counter_clockwise_direction
up right down left -> left up right down

pushable_type => opposite_pushable_type
stick sausage -> sausage stick

low_floor => higher_floor
floor_0 floor_1 -> floor_1 floor_2

high_floor => lower_floor
floor_1 floor_2 -> floor_0 floor_1

low_count => next_count
0 1 2 3 4 5 6 7 8 -> 1 2 3 4 5 6 7 8 9

========
OBJECTS
========

( [Force Legend]
stick_simple              \            stick_insert
sausage_simple sausage_slip  sausage_insert )

background 
black     

fixed:ground:floor_0
#C6743D #AF6736 #66391E #4C2A16 #331B0E ( V in HSV: 77-68-40-30-20 )
1000000001
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
1000000001
2222222222
2222222222
2222222222
3333333333
4444444444

fixed:ground:floor_1
#12A52D #0F8E27 #0D7A21 #66391E
1000000001
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
0000000000
1000000001
2222222222
2222222222
3333333333
3333333333
3333333333
translate: up:5

_floor_1_grass_cover
#66391E
..........
..........
..........
..........
..........
..........
..........
..........
..........
..........
0000000000
0000000000
..........
..........
..........
translate: up:5

_floor_2_wall_cover
brown brown #66391E #66391E
copy: fixed:ground:floor_1 translate: up:5

fixed:ground:floor_2
grey
0000000000
0........0
0...0....0
0..0.....0
0........0
0.....0..0
0....0...0
0........0
0000000000
0........0
0..0.....0
0.0....0.0
0.....0..0
0........0
0000000000
translate: up:10

fixed:grill:floor_0
red #61131a orange #8c511d #5E5E5E black #7A7A7A #66391E // V in HSV is reduced by 37 for the side color
0022002200
6444444446
6444444446
5555555555
2200220022
2200220022
6444444446
6444444446
5555555555
0022002200
1133113311
7777777777
7777777777
7777777777
7777777777

fixed:grill:floor_1
red #61131a orange #8c511d #5E5E5E black #7A7A7A #66391E
copy: fixed:grill:floor_0 translate: up:5

fixed:grill:floor_2
red #61131a orange #8c511d #5E5E5E black #7A7A7A #66391E
copy: fixed:grill:floor_1 translate: up:5

pushable:pushable_type:is_tip_or_packed:directions:floor
transparent

pushable:stick:tip_or_packed:up:floor_0
orange brown
..........
..........
...0......
...00.....
...000....
...0000...
...0000...
...0000...
...0000...
...0000...
...0000...
...0000...
...1111...
...1111...
..........

pushable:stick:not_tip_or_packed:down:floor_0
orange brown
..........
..........
...0000...
...0000...
...0000...
...0000...
...0000...
...0000...
...0000...
...0000...
...0000...
...0000...
...1111...
...1111...
..........

pushable:stick:is_tip_or_packed:directions:floor_1
orange brown
copy: pushable:stick:is_tip_or_packed:directions:floor_0 translate: up:5

pushable:stick:is_tip_or_packed:directions:floor_2
orange brown
copy: pushable:stick:is_tip_or_packed:directions:floor_1 translate: up:5

_stick_bottom:floor_0
orange brown
..........
..........
..........
..........
..........
..........
..........
..........
..........
...0000...
...1111...
...1111...
..........

_stick_bottom:floor_1
orange brown
copy: _stick_bottom:floor_0 translate: up:5

_stick_bottom:floor_2
orange brown
copy: _stick_bottom:floor_1 translate: up:5

pushable:sausage:not_tip_or_packed:up:floor_0
#e06f8b #cc6680 #994d60 #e288ae
..........
..........
..........
...1000...
.11000000.
1100000300
1100000030
1100000030
1100000000
1100000000
2222222222
2222222222
2222222222
2222222222
2222222222

pushable:sausage:not_tip_or_packed:down:floor_0
#e06f8b #cc6680 #994d60 #e288ae
1100000000
1100000000
1100000000
1100000000
1100000000
1100000000
1100000000
1100000000
1110000001
2111111112
2211111122
.22222222.
...2222...
..........
..........

pushable:sausage:not_tip_or_packed:left:floor_0
#e06f8b #cc6680 #994d60 #e288ae
..........
..........
...1000000
..10000000
..10000000
.110000000
.110000000
.110000000
.110000000
.211000000
.211111111
.221111111
..22222222
...2222222
..........


pushable:sausage:not_tip_or_packed:right:floor_0
#e06f8b #cc6680 #994d60 #e288ae
..........
..........
0000000...
00003300..
00000030..
000000000.
000000000.
000000000.
000000000.
000000001.
111111111.
111111112.
22222222..
2222222...
..........

pushable:sausage:not_tip_or_packed:directions:floor_1
#e06f8b #cc6680 #994d60 #e288ae
copy: pushable:sausage:not_tip_or_packed:directions:floor_0 translate: up:5

pushable:sausage:not_tip_or_packed:directions:floor_2
#e06f8b #cc6680 #994d60 #e288ae
copy: pushable:sausage:not_tip_or_packed:directions:floor_1 translate: up:5

pushable:sausage:tip_or_packed:up:floor_0
#f10914 #db141e #ab0f17 #787878
..........
..........
....33....
...1000...
.11000000.
1100000001
1100000001
1100000001
1100000001
1100000001
2222222222
2222222222
2222222222
2222222222
2222222222

pushable:sausage:tip_or_packed:down:floor_0
#f10914 #db141e #ab0f17 #787878
1100000001
1100000001
1100000001
1100000001
1100000001
1100000001
1100000001
1100000001
1110000011
2111111112
2211331122
.22233222.
...2222...
..........
..........

pushable:sausage:tip_or_packed:left:floor_0
#f10914 #db141e #ab0f17 #787878
..........
..........
...1000000
..10000000
..10000000
.110000000
.110000000
3110000000
3110000000
3211000000
.211111111
.221111111
..22222222
...2222222
..........


pushable:sausage:tip_or_packed:right:floor_0
#f10914 #db141e #ab0f17 #787878
..........
..........
0000000...
00000000..
00000000..
000000000.
000000000.
0000000003
0000000003
0000000013
111111111.
111111112.
22222222..
2222222...
..........

pushable:sausage:tip_or_packed:directions:floor_1
#f10914 #db141e #ab0f17 #787878
copy: pushable:sausage:tip_or_packed:directions:floor_0 translate: up:5

pushable:sausage:tip_or_packed:directions:floor_2
#f10914 #db141e #ab0f17 #787878
copy: pushable:sausage:tip_or_packed:directions:floor_1 translate: up:5

goal:floor_0
#F7E26B80
translate: up:5

goal:floor_1
#F7E26B80
copy: goal:floor_0 translate: up:5

goal:floor_2
#F7E26B80
copy: goal:floor_1 translate: up:5

goal_border:is_corner:directions:floor
transparent

goal_border:not_corner:directions:floor_0
yellow
0000000000
..........
..........
..........
..........
..........
..........
..........
..........
..........
rot: up:> translate: up:5

goal_border:corner:directions:floor_0
yellow
0.........
..........
..........
..........
..........
..........
..........
..........
..........
..........
rot: up:> translate: up:5

goal_border:is_corner:directions:floor_1
yellow
copy: goal_border:is_corner:directions:floor_0 translate: up:5

goal_border:is_corner:directions:floor_2
yellow
copy: goal_border:is_corner:directions:floor_1 translate: up:5

scoreboard_empty
#211209
..........
..........
....00....
...0000...
..000000..
..000000..
..000000..
..000000..
..000000..
..000000..
...0000...
....00....
..........
..........
..........

scoreboard_filled
#f10914 #787878
..........
..........
....11....
...0000...
..000000..
..000000..
..000000..
..000000..
..000000..
..000000..
...0000...
....11....
..........
..........
..........


_force:force_type:directions:pushable_type:floor:is_countered
transparent

_force:simple:directions:stick:floor_0:uncountered
black
..0..
.000.
0.0.0
..0..
..0..
rot: up:> translate: up:10

_force:simple:directions:stick:floor_1:uncountered
black
copy: _force:simple:directions:stick:floor_0:uncountered translate: up:5

_force:simple:directions:stick:floor_2:uncountered
black
copy: _force:simple:directions:stick:floor_1:uncountered translate: up:5

_force:insert:directions:stick:floor_0:uncountered
red
..0..
.000.
0.0.0
..0..
..0..
rot: up:> translate: up:10 translate: right:5

_force:insert:directions:stick:floor_1:uncountered
red
copy: _force:insert:directions:stick:floor_0:uncountered translate: up:5

_force:insert:directions:stick:floor_2:uncountered
red
copy: _force:insert:directions:stick:floor_1:uncountered translate: up:5

_force:simple:directions:sausage:floor_0:uncountered
black
..0..
.000.
0.0.0
..0..
..0..
rot: up:> translate: up:5

_force:simple:directions:sausage:floor_1:uncountered
black
copy: _force:simple:directions:sausage:floor_0:uncountered translate: up:5

_force:simple:directions:sausage:floor_2:uncountered
black
copy: _force:simple:directions:sausage:floor_1:uncountered translate: up:5

_force:slip:directions:sausage:floor_0:uncountered
blue
..0..
.000.
0.0.0
..0..
..0..
rot: up:> translate: up:5 translate: right:2

_force:slip:directions:sausage:floor_1:uncountered
blue
copy: _force:slip:directions:sausage:floor_0:uncountered translate: up:5

_force:slip:directions:sausage:floor_2:uncountered
blue
copy: _force:slip:directions:sausage:floor_1:uncountered translate: up:5

_force:insert:directions:sausage:floor_0:uncountered
red
..0..
.000.
0.0.0
..0..
..0..
rot: up:> translate: up:5 translate: right:5

_force:insert:directions:sausage:floor_1:uncountered
red
copy: _force:insert:directions:sausage:floor_0:uncountered translate: up:5

_force:insert:directions:sausage:floor_2:uncountered
red
copy: _force:insert:directions:sausage:floor_1:uncountered translate: up:5

_force:simple:directions:stick:floor:countered
grey
copy: _force:simple:directions:stick:floor:uncountered

_force:insert:directions:stick:floor:countered
orange
copy: _force:insert:directions:stick:floor:uncountered

_force:simple:directions:sausage:floor:countered
grey
copy: _force:simple:directions:sausage:floor:uncountered

_force:slip:directions:sausage:floor:countered
lightblue
copy: _force:slip:directions:sausage:floor:uncountered

_force:insert:directions:sausage:floor:countered
orange
copy: _force:insert:directions:sausage:floor:uncountered


_temp_force_direction:force_type:directions:pushable_type:floor
transparent

_spread:pushable_type:floor
transparent

_spread_next:pushable_type:floor
transparent

_calculate_moving_direction:pushable_type:floor
transparent

_old_moving_direction:pushable_type:floor:directions
transparent

( pierce & through_hole mark the objects to bypass the blocking process )
_pierce:pushable_type:floor:directions (pierce means piercing through NEXT SPACE)
transparent

_through_hole:pushable_type:floor:directions:which_space
transparent

_input:directions
transparent

_insert_force_source:pushable_type:floor
transparent

_init
transparent

_temp_variable_holder
transparent

_can_fall_again
transparent

_do_again:again_round_type
transparent

_supported:floor
transparent

_just_fell:floor
transparent

_not_eligible_for_pack:floor
transparent

_rightmost_scoreboard
transparent

_update_scoreboard
transparent

_already_calculated_for_scoreboard:floor
transparent

_scoreboard_calculation_spread_ongoing
transparent

_win_count:count
transparent

_already_counted
transparent

_has_goal_border:directions:clock_directions:floor
transparent

_title_its_oily
transparent #211209
111000000000111000000000111110001000001000000000000000011100001000011000000000
001000000000001000000000001000001000001000000000000000100010000000001000000000
001000000000001000000000001000111110001000011110000000100010011000001000100010
001000000000001000000000001000001000000000100000000000100010001000001000100010
001000011100001000000000001000001000000000011100000000100010001000001000100010
001000000000001000000000001000001000000000000010000000100010001000001000100010
111110000000111110000000111110000110000000111100000000011100011100011100011110
000000000000000000000000000000000000000000000000000000000000000000000000000010
000000000000000000000000000000000000000000000000000000000000000000000000111100
translate: right:3 translate: up:2

_title_no_escape
transparent #211209
111000000000111100000000100010000000000000111110000000000000000000000000000000
001000000000000010000000110010000000000000100000000000000000000000000000000000
001000000000000010000000101010011100000000111110011110011110011110111100011100
001000000000011100000000100110100010000000100000100000100000100010100010100010
001000011100100000000000100010100010000000100000011100100000100010100010111110
001000000000100000000000100010100010000000100000000010100000100010100010100000
111110000000111110000000100010011100000000111110111100011110011110111100011100
000000000000000000000000000000000000000000000000000000000000000000100000000000
000000000000000000000000000000000000000000000000000000000000000000100000000000
translate: right:3 translate: up:2

_title_get_it_off
transparent #211209
111000000000111100000000011110000000001000000000111110001000000000011100000110000110
001000000000000010000000100000000000001000000000001000001000000000100010001000001000
001000000000001100000000100000011100111110000000001000111110000000100010111110111110
001000000000000010000000100000100010001000000000001000001000000000100010001000001000
001000011100000010000000100110111110001000000000001000001000000000100010001000001000
001000000000000010000000100010100000001000000000001000001000000000100010001000001000
111110000000111100000000011110011100000110000000111110000110000000011100001000001000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_flip_flop
transparent #211209
111000000000100000000000111110011000001000000000000000000110011000000000000000
001000000000100000000000100000001000000000000000000000001000001000000000000000
001000000000100000000000111110001000011000111100000000111110001000011100111100
001000000000100100000000100000001000001000100010000000001000001000100010100010
001000011100111110000000100000001000001000100010011100001000001000100010100010
001000000000000100000000100000001000001000100010000000001000001000100010100010
111110000000000100000000100000011100011100111100000000001000011100011100111100
000000000000000000000000000000000000000000100000000000000000000000000000100000
000000000000000000000000000000000000000000100000000000000000000000000000100000
translate: right:3 translate: up:2

_title_drawbridge
transparent #211209
111000000000111110000000111100000000000000000000100000000000001000000010000000000000
001000000000100000000000100010000000000000000000100000000000000000000010000000000000
001000000000111100000000100010011110011110101010111100011110011000011110011110011100
001000000000000010000000100010100000100010101010100010100000001000100010100010100010
001000011100000010000000100010100000100010101010100010100000001000100010100010111110
001000000000000010000000100010100000100010101010100010100000001000100010100010100000
111110000000111100000000111100100000011110010100011100100000011100011110011110011100
000000000000000000000000000000000000000000000000000000000000000000000000000010000000
000000000000000000000000000000000000000000000000000000000000000000000000011100000000
translate: right:3 translate: up:2

_title_out_of_order
transparent #211209
111000000000011100000000011100000000001000000000000000000110000000011100000000000010000000000000
001000000000100000000000100010000000001000000000000000001000000000100010000000000010000000000000
001000000000111100000000100010100010111110000000011100111110000000100010011110011110011100011110
001000000000100010000000100010100010001000000000100010001000000000100010100000100010100010100000
001000011100100010000000100010100010001000000000100010001000000000100010100000100010111110100000
001000000000100010000000100010100010001000000000100010001000000000100010100000100010100000100000
111110000000011100000000011100011110000110000000011100001000000000011100100000011110011100100000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_odd_gap
transparent #211209
111000000000111110000000011100000010000010000000011110000000000000
001000000000000010000000100010000010000010000000100000000000000000
001000000000000100000000100010011110011110000000100000011110111100
001000000000001000000000100010100010100010000000100000100010100010
001000011100001000000000100010100010100010000000100110100010100010
001000000000001000000000100010100010100010000000100010100010100010
111110000000001000000000011100011110011110000000011110011110111100
000000000000000000000000000000000000000000000000000000000000100000
000000000000000000000000000000000000000000000000000000000000100000
translate: right:3 translate: up:2

_title_claw_hammer
transparent #211209
111000000000011100000000011110011000000000000000000000100010000000000000000000000000000000
001000000000100010000000100000001000000000000000000000100010000000000000000000000000000000
001000000000011100000000100000001000011110101010000000111110011110010100010100011100011110
001000000000100010000000100000001000100010101010000000100010100010101010101010100010100000
001000011100100010000000100000001000100010101010000000100010100010101010101010111110100000
001000000000100010000000100000001000100010101010000000100010100010101010101010100000100000
111110000000011100000000011110011100011110010100000000100010011110101010101010011100100000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_bowling_alley
transparent #211209
111000000000011100000000111100000000000000011000001000000000000000000000011100011000011000000000000000
001000000000100010000000100010000000000000001000000000000000000000000000100010001000001000000000000000
001000000000100010000000111100011100101010001000011000011100011110000000100010001000001000011100100010
001000000000100010000000100010100010101010001000001000100010100010000000100010001000001000100010100010
001000011100011110000000100010100010101010001000001000100010100010000000111110001000001000111110100010
001000000000000010000000100010100010101010001000001000100010100010000000100010001000001000100000100010
111110000000011100000000111100011100010100011100011100100010011110000000100010011100011100011100011110
000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000010
000000000000000000000000000000000000000000000000000000000000011100000000000000000000000000000000111100
translate: right:3 translate: up:2

_title_afterlife
transparent #211209
111100000000111000000000011100000110001000000000000000011000001000000110000000
000010000000001000000000100010001000001000000000000000001000000000001000000000
000010000000001000000000100010111110111110011100011110001000011000111110011100
011100000000001000000000100010001000001000100010100000001000001000001000100010
100000011100001000000000111110001000001000111110100000001000001000001000111110
100000000000001000000000100010001000001000100000100000001000001000001000100000
111110000000111110000000100010001000000110011100100000011100011100001000011100
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_crossroad
transparent #211209
111100000000111100000000011110000000000000000000000000000000000000000000000010
000010000000000010000000100000000000000000000000000000000000000000000000000010
000010000000000010000000100000011110011100011110011110011110011100011110011110
011100000000011100000000100000100000100010100000100000100000100010100010100010
100000011100100000000000100000100000100010011100011100100000100010100010100010
100000000000100000000000100000100000100010000010000010100000100010100010100010
111110000000111110000000011110100000011100111100111100100000011100011110011110
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_production_line
transparent #211209
111100000000111100000000111100000000000000000010000000000000001000001000000000000000000000100000001000000000000000
000010000000000010000000100010000000000000000010000000000000001000000000000000000000000000100000000000000000000000
000010000000001100000000100010011110011100011110100010011110111110011000011100011100000000100000011000011100011100
011100000000000010000000100010100000100010100010100010100000001000001000100010100010000000100000001000100010100010
100000011100000010000000111100100000100010100010100010100000001000001000100010100010000000100000001000100010111110
100000000000000010000000100000100000100010100010100010100000001000001000100010100010000000100000001000100010100000
111110000000111100000000100000100000011100011110011110011110000110011100011100100010000000111110011100100010011100
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_where
transparent #211209
111100000000100000000000101010100000000000000000000000011100
000010000000100000000000101010100000000000000000000000100010
000010000000100000000000101010111100011100011110011100000010
011100000000100100000000101010100010100010100000100010000010
100000011100111110000000101010100010111110100000111110001100
100000000000000100000000101010100010100000100000100000000000
111110000000000100000000010100100010011100100000011100001000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_hiking_basics
transparent #211209
111100000000111110000000100010001000100000001000000000000000000000111100000000000000001000000000000000
000010000000100000000000100010000000100000000000000000000000000000100010000000000000000000000000000000
000010000000111100000000111110011000100010011000011100011110000000111100011110011110011000011110011110
011100000000000010000000100010001000100100001000100010100010000000100010100010100000001000100000100000
100000011100000010000000100010001000111000001000100010100010000000100010100010011100001000100000011100
100000000000000010000000100010001000100100001000100010100010000000100010100010000010001000100000000010
111110000000111100000000100010011100100010011100100010011110000000111100011110111100011100011110111100
000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000011100000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_team_building
transparent #211209
111100000000011100000000111110000000000000000000000000111100000000001000011000000010001000000000000000
000010000000100000000000001000000000000000000000000000100010000000000000001000000010000000000000000000
000010000000111100000000001000011100011110010100000000111100100010011000001000011110011000011100011110
011100000000100010000000001000100010100010101010000000100010100010001000001000100010001000100010100010
100000011100100010000000001000111110100010101010000000100010100010001000001000100010001000100010100010
100000000000100010000000001000100000100010101010000000100010100010001000001000100010001000100010100010
111110000000011100000000001000011100011110101010000000111100011110011100011100011110011100100010011110
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100
translate: right:3 translate: up:2

_title_sharing
transparent #211209
111100000000111110000000011110100000000000000000001000000000000000
000010000000000010000000100000100000000000000000000000000000000000
000010000000000100000000011100111100011110011110011000011100011110
011100000000001000000000000010100010100010100000001000100010100010
100000011100001000000000000010100010100010100000001000100010100010
100000000000001000000000000010100010100010100000001000100010100010
111110000000001000000000111100100010011110100000011100100010011110
000000000000000000000000000000000000000000000000000000000000000010
000000000000000000000000000000000000000000000000000000000000011100
translate: right:3 translate: up:2

_title_well_where
transparent #211209
111100000000011100000000101010000000011000011000000000000000101010100000000000000000000000011100
000010000000100010000000101010000000001000001000000000000000101010100000000000000000000000100010
000010000000011100000000101010011100001000001000000000000000101010111100011100011110011100000010
011100000000100010000000101010100010001000001000000000000000101010100010100010100000100010000010
100000011100100010000000101010111110001000001000000000000000101010100010111110100000111110001100
100000000000100010000000101010100000001000001000001000000000101010100010100000100000100000000000
111110000000011100000000010100011100011100011100011000000000010100100010011100100000011100001000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_far_reach
transparent #211209
111100000000011100000000111110000000000000000000111100000000000000000000100000
000010000000100010000000100000000000000000000000100010000000000000000000100000
000010000000100010000000111110011110011110000000100010011100011110011110111100
011100000000100010000000100000100010100000000000111100100010100010100000100010
100000011100011110000000100000100010100000000000100010111110100010100000100010
100000000000000010000000100000100010100000000000100010100000100010100000100010
111110000000011100000000100000011110100000000000100010011100011110011110100010
000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_grill
transparent #211209
111100000000111000000000011110000000001000011000011000
000010000000001000000000100000000000000000001000001000
001100000000001000000000100000011110011000001000001000
000010000000001000000000100000100000001000001000001000
000010011100001000000000100110100000001000001000001000
000010000000001000000000100010100000001000001000001000
111100000000111110000000011110100000011100011100011100
000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_inject
transparent #211209
111100000000111100000000111110000000001000000000000000001000
000010000000000010000000001000000000000000000000000000001000
001100000000000010000000001000011100011000011100011110111110
000010000000011100000000001000100010001000100010100000001000
000010011100100000000000001000100010001000111110100000001000
000010000000100000000000001000100010001000100000100000001000
111100000000111110000000111110100010001000011100011110000110
000000000000000000000000000000000000101000000000000000000000
000000000000000000000000000000000000010000000000000000000000
translate: right:3 translate: up:2

_title_placeholder
transparent #211209
111100000000111100000000111100011000000000000000000000100000000000011000000010000000000000
000010000000000010000000100010001000000000000000000000100000000000001000000010000000000000
001100000000001100000000100010001000011110011110011100111100011100001000011110011100011110
000010000000000010000000100010001000100010100000100010100010100010001000100010100010100000
000010011100000010000000111100001000100010100000111110100010100010001000100010111110100000
000010000000000010000000100000001000100010100000100000100010100010001000100010100000100000
111100000000111100000000100000011100011110011110011100100010011100011100011110011100100000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_corner
transparent #211209
111100000000100000000000011110000000000000000000000000000000
000010000000100000000000100000000000000000000000000000000000
001100000000100000000000100000011100011110011100011100011110
000010000000100100000000100000100010100000100010100010100000
000010011100111110000000100000100010100000100010111110100000
000010000000000100000000100000100010100000100010100000100000
111100000000000100000000011110011100100000100010011100100000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_trojan
transparent #211209
111100000000111110000000111110000000000000001000000000000000
000010000000100000000000001000000000000000000000000000000000
001100000000111100000000001000011110011100011000011110011100
000010000000000010000000001000100000100010001000100010100010
000010011100000010000000001000100000100010001000100010100010
000010000000000010000000001000100000100010001000100010100010
111100000000111100000000001000100000011100001000011110100010
000000000000000000000000000000000000000000101000000000000000
000000000000000000000000000000000000000000010000000000000000
translate: right:3 translate: up:2

_title_ditches
transparent #211209
111100000000011100000000111100001000001000000000100000000000000000
000010000000100000000000100010000000001000000000100000000000000000
001100000000111100000000100010011000111110011110111100011100011110
000010000000100010000000100010001000001000100000100010100010100000
000010011100100010000000100010001000001000100000100010111110011100
000010000000100010000000100010001000001000100000100010100000000010
111100000000011100000000111100011100000110011110100010011100111100
000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_odd_goal
transparent #211209
111100000000111110000000011100000010000010000000011110000000000000011000
000010000000000010000000100010000010000010000000100000000000000000001000
001100000000000100000000100010011110011110000000100000011100011110001000
000010000000001000000000100010100010100010000000100000100010100010001000
000010011100001000000000100010100010100010000000100110100010100010001000
000010000000001000000000100010100010100010000000100010100010100010001000
111100000000001000000000011100011110011110000000011110011100011110011100
000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_bottleneck
transparent #211209
111100000000011100000000111100000000001000001000011000000000000000000000000000100000
000010000000100010000000100010000000001000001000001000000000000000000000000000100000
001100000000011100000000111100011100111110111110001000011100011100011100011110100010
000010000000100010000000100010100010001000001000001000100010100010100010100000100100
000010011100100010000000100010100010001000001000001000111110100010111110100000111000
000010000000100010000000100010100010001000001000001000100000100010100000100000100100
111100000000011100000000111100011100000110000110011100011100100010011100011110100010
000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

_title_sound_test
transparent #211209
111100000000011100000000011110000000000000000000000010000000111110000000000000001000
000010000000100010000000100000000000000000000000000010000000001000000000000000001000
001100000000100010000000011100011100100010011100011110000000001000011100011110111110
000010000000100010000000000010100010100010100010100010000000001000100010100000001000
000010011100011110000000000010100010100010100010100010000000001000111110011100001000
000010000000000010000000000010100010100010100010100010000000001000100000000010001000
111100000000011100000000111100011100011110100010011110000000001000011100111100000110
000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000
translate: right:3 translate: up:2

=======
LEGEND
=======

thing = pushable:pushable_type:is_tip_or_packed:directions:floor or fixed:fixed_type:floor
_titles = _title_its_oily or _title_no_escape or _title_get_it_off or _title_flip_flop or _title_drawbridge or _title_out_of_order or _title_odd_gap or _title_claw_hammer or _title_bowling_alley or _title_afterlife or _title_crossroad or _title_production_line or _title_where or _title_hiking_basics or _title_team_building or _title_sharing or _title_well_where or _title_far_reach or _title_grill or _title_inject or _title_placeholder or _title_corner or _title_trojan or _title_ditches or _title_odd_goal or _title_bottleneck or _title_sound_test

O = background
_ = fixed:ground:floor_0
. = fixed:ground:floor_0 and fixed:ground:floor_1
/ = fixed:ground:floor_0 and fixed:ground:floor_1 and fixed:ground:floor_2
- = fixed:ground:floor_0 and fixed:ground:floor_2 and _floor_2_wall_cover
# = / and _floor_2_wall_cover
$ = # and scoreboard_empty
+ = fixed:ground:floor_0 and fixed:grill:floor_1
♯ = fixed:grill:floor_0
± = fixed:grill:floor_0 and goal:floor_0

x = fixed:ground:floor_0 and fixed:ground:floor_1 and goal:floor_1
× = fixed:ground:floor_0 and goal:floor_0
* = + and goal:floor_1

n = . and pushable:sausage:not_tip_or_packed:up:floor_2
u = . and pushable:sausage:not_tip_or_packed:down:floor_2
{ = . and pushable:sausage:not_tip_or_packed:left:floor_2
} = . and pushable:sausage:not_tip_or_packed:right:floor_2
t = . and pushable:stick:tip_or_packed:up:floor_2
b = . and pushable:stick:not_tip_or_packed:down:floor_2

player = pushable:stick:is_tip_or_packed:directions:floor

‹ = _ and pushable:sausage:not_tip_or_packed:left:floor_1  ( Lower floor )
› = _ and pushable:sausage:not_tip_or_packed:right:floor_1
^ = _ and pushable:sausage:not_tip_or_packed:up:floor_1
v = _ and pushable:sausage:not_tip_or_packed:down:floor_1
< = x and pushable:sausage:not_tip_or_packed:left:floor_2  ( On target )
> = x and pushable:sausage:not_tip_or_packed:right:floor_2
∩ = × and pushable:sausage:not_tip_or_packed:up:floor_1  ( Lower floor & on target )
ս = × and pushable:sausage:not_tip_or_packed:down:floor_1
├ = × and pushable:sausage:not_tip_or_packed:left:floor_1
┤ = × and pushable:sausage:not_tip_or_packed:right:floor_1
« = pushable:sausage:tip_or_packed:left:floor_2  ( Floating, packed )
» = pushable:sausage:tip_or_packed:right:floor_2
[ = + and pushable:sausage:not_tip_or_packed:left:floor_2  ( On grill )
] = + and pushable:sausage:not_tip_or_packed:right:floor_2
ſ = _ and pushable:stick:tip_or_packed:up:floor_1  ( Lower floor )
Ɩ = _ and pushable:stick:not_tip_or_packed:down:floor_1
← = < and pushable:stick:tip_or_packed:up:floor_2  ( Stick tip inside Sausage )
→ = > and pushable:stick:tip_or_packed:up:floor_2
↑ = x and pushable:stick:tip_or_packed:up:floor_2  ( On target )
↓ = x and pushable:stick:not_tip_or_packed:down:floor_2

α = _ and pushable:sausage:not_tip_or_packed:up:floor_2
β = pushable:sausage:not_tip_or_packed:left:floor_1 and pushable:sausage:tip_or_packed:right:floor_2
γ = - and pushable:sausage:not_tip_or_packed:up:floor_1
δ = - and pushable:sausage:not_tip_or_packed:right:floor_1
ε = - and pushable:sausage:not_tip_or_packed:down:floor_1
ζ = - and pushable:sausage:not_tip_or_packed:left:floor_1

% = # and _init and _temp_variable_holder

① = % and _title_its_oily
② = % and _title_no_escape
③ = % and _title_get_it_off
④ = % and _title_flip_flop
⑤ = % and _title_drawbridge
⑥ = % and _title_out_of_order
⑦ = % and _title_odd_gap
⑧ = % and _title_claw_hammer
⑨ = % and _title_bowling_alley
⑩ = % and _title_afterlife
⑪ = % and _title_crossroad
⑫ = % and _title_production_line
⑬ = % and _title_where
⑭ = % and _title_hiking_basics
⑮ = % and _title_team_building
⑯ = % and _title_sharing
⑰ = % and _title_well_where
⑱ = % and _title_far_reach
❶ = % and _title_grill
❷ = % and _title_inject
❸ = % and _title_placeholder
❹ = % and _title_corner
❺ = % and _title_trojan
❻ = % and _title_ditches
❼ = % and _title_odd_goal
❽ = % and _title_bottleneck
❾ = % and _title_sound_test

================
COLLISIONLAYERS
================

background

pushable:stick:is_tip_or_packed:directions:floor_0
pushable:sausage:is_tip_or_packed:directions:floor_0
_stick_bottom:floor_0
fixed:fixed_type:floor_0
goal:floor_0
is_corner directions -> goal_border:is_corner:directions:floor_0

pushable:stick:is_tip_or_packed:directions:floor_1
pushable:sausage:is_tip_or_packed:directions:floor_1
_stick_bottom:floor_1
fixed:fixed_type:floor_1
goal:floor_1
is_corner directions -> goal_border:is_corner:directions:floor_1

pushable:stick:is_tip_or_packed:directions:floor_2
pushable:sausage:is_tip_or_packed:directions:floor_2
_stick_bottom:floor_2
fixed:fixed_type:floor_2
goal:floor_2
is_corner directions -> goal_border:is_corner:directions:floor_2
_floor_2_wall_cover

force_type directions pushable_type floor -> _force:force_type:directions:pushable_type:floor:is_countered
force_type pushable_type floor -> _temp_force_direction:force_type:directions:pushable_type:floor

pushable_type floor -> _spread:pushable_type:floor, _spread_next:pushable_type:floor
pushable_type floor -> _calculate_moving_direction:pushable_type:floor

_insert_force_source:pushable_type:floor
pushable_type floor -> _old_moving_direction:pushable_type:floor:directions
_pierce:pushable_type:floor:directions
pushable_type directions which_space -> _through_hole:pushable_type:floor:directions:which_space
_input:directions

_init
_temp_variable_holder
_can_fall_again
again_round_type -> _do_again:again_round_type
floor -> _supported:floor
floor -> _just_fell:floor
floor -> _not_eligible_for_pack:floor

_floor_1_grass_cover

scoreboard_empty
scoreboard_filled
_rightmost_scoreboard
_update_scoreboard
floor -> _already_calculated_for_scoreboard:floor
_scoreboard_calculation_spread_ongoing
_win_count:count
_already_counted
directions clock_directions floor -> _has_goal_border:directions:clock_directions:floor

--

_titles

======
SOUNDS
======

sfx0 33024507 ( Move )
sfx1 56189707:15 ( Block )
sfx2 5822107 ( Slip )
sfx3 78367101 ( Insert )
sfx4 53000505 ( Pack )
sfx5 69528504 ( Fall onto ground )
sfx6 81700105 ( Fall into void )
sfx7 80064702 ( Grill )

restart 17145300
undo 91736300
showMessage 60969302 (55305902)
//endlevel 6246906  // There is already a pack sfx at end of level, so no need for another one.

=====
RULES     
=====

///////////////////////////////////////////////////
///////////////////////////////////////////////////
(                   Main rules                    )
///////////////////////////////////////////////////
///////////////////////////////////////////////////

( Level init calculations )
  ( - Calculate _rightmost_scoreboard )
  [_init] [scoreboard_empty] -> [_init] [scoreboard_empty _rightmost_scoreboard]
  right [_init] [scoreboard_empty _rightmost_scoreboard | scoreboard_empty] -> [_init] [scoreboard_empty | scoreboard_empty]
  ( - Update scoreboard )
  [_init] -> [_init _update_scoreboard]
  ( - Calculate floor 1 grass covers )
  [_init] [fixed:ground:floor_1 fixed:fixed_type:floor_2] -> [_init] [fixed:ground:floor_1 fixed:fixed_type:floor_2 _floor_1_grass_cover]
  ( - Calculate goal borders )
  floor [_init] [goal:floor | no goal:floor ] -> [_init] [goal:floor goal_border:not_corner:>:floor | ]
  floor [_init] [goal:floor | goal_border:not_corner:^:floor] -> [_init] [goal:floor _has_goal_border:>:counterclockwise:floor | goal_border:not_corner:^:floor]
  floor [_init] [goal:floor | goal_border:not_corner:v:floor] -> [_init] [goal:floor _has_goal_border:>:clockwise:floor | goal_border:not_corner:v:floor]
  floor [_init] [goal:floor _has_goal_border:<:clockwise:floor _has_goal_border:^:counterclockwise:floor] -> [_init] [goal:floor _has_goal_border:<:clockwise:floor _has_goal_border:^:counterclockwise:floor goal_border:corner:^:floor]
  [_init] [_has_goal_border:directions:clock_directions:floor] -> [_init] []
[_init] -> []


( Clear temp sprites )
[_stick_bottom:floor] -> []

( Save input direction on player and give force )
floor [> pushable:stick:is_tip_or_packed:directions:floor] -> [> pushable:stick:is_tip_or_packed:directions:floor _input:> _force:insert:>:stick:floor:uncountered]
( Calculate pierce )
floor [> pushable:stick:tip_or_packed:>:floor | pushable:sausage:not_tip_or_packed:directions:floor] -> [> pushable:stick:tip_or_packed:>:floor _pierce:stick:floor:> | pushable:sausage:not_tip_or_packed:directions:floor]
( Calculate through_hole )
  ( - Calculate through_hole:...:this_space )
floor [pushable:stick:is_tip_or_packed:>:floor pushable:sausage:not_tip_or_packed:directions:floor] -> [pushable:stick:is_tip_or_packed:>:floor pushable:sausage:not_tip_or_packed:directions:floor _through_hole:stick:floor:>:this_space _through_hole:stick:floor:<:this_space _through_hole:sausage:floor:>:this_space _through_hole:sausage:floor:<:this_space]
  ( - Calculate through_hole:...:next_space )
floor [pushable:stick:is_tip_or_packed:<:floor | pushable:stick:is_tip_or_packed:>:floor pushable:sausage:not_tip_or_packed:directions:floor] -> [pushable:stick:is_tip_or_packed:<:floor _through_hole:stick:floor:>:next_space | pushable:stick:is_tip_or_packed:>:floor pushable:sausage:not_tip_or_packed:directions:floor _through_hole:sausage:floor:<:next_space]


startloop
  ( Give force to player ) // When subroutine remove_force_from_old_moving_direction removed the force .
  floor [_input:> pushable:stick:is_tip_or_packed:directions:floor no _force:insert:>:stick:floor:is_countered] -> [_input:> pushable:stick:is_tip_or_packed:directions:floor _force:insert:>:stick:floor:uncountered _calculate_moving_direction:stick:floor] gosub calculate_moving_direction

  ( I Push )
  
  ( - Insert push )
  // Don't give outgoing force when there is an incoming force between the two?no insert_force_source:pushable_type
  // Calculate moving direction right now, not waiting for other tiles that need calculations and calculating them together. This is because otherwise, when spreading, it's possible that 2 tiles wont't spread into each other because they are both spread sources. e.g. pushing up 4 sausages positioned like a roman number II.
  pushable_type floor [> pushable:pushable_type:is_tip_or_packed:directions:floor pushable:opposite_pushable_type:is_tip_or_packed:directions:floor no _force:insert:>:opposite_pushable_type:floor:is_countered] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor pushable:opposite_pushable_type:is_tip_or_packed:directions:floor _force:insert:>:opposite_pushable_type:floor:uncountered _insert_force_source:pushable_type:floor _calculate_moving_direction:opposite_pushable_type:floor] gosub calculate_moving_direction
  // [TODO?] If the object you are pushing is moving in the same direction driven by an insert force, then it should not be pushed (because you can't touch it!). This is implemented by adding "no force:insert:>:sausage:uncountered" in the following rules, which is only a makeshift, and only works when there are no multiple objects & no strangely-shaped objects.
  ( - Push unpacked opposing sausage )
  pushable_type is_tip_or_packed floor [> pushable:pushable_type:is_tip_or_packed:directions:floor no _through_hole:pushable_type:floor:>:next_space | pushable:sausage:not_tip_or_packed:<:floor no _force:simple:>:sausage:floor:is_countered no _force:insert:>:sausage:floor:uncountered] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor | pushable:sausage:not_tip_or_packed:<:floor _force:simple:>:sausage:floor:uncountered _calculate_moving_direction:sausage:floor] gosub calculate_moving_direction
  ( - Push unpacked side sausage )
    ( [Rotation A] [Simple + Slip] )
    // The following 2 rules already did this job, but this rule is added to make the rule process shorter
    // If you remove "is_tip_or_packed" from rule prefix, then the total instruction count is lower. This is because in the compiled instructions, something like "pushable:...:is_tip_or_packed:..." can be used.
    // If you remove the "no ..." from the rule, then the total instruction count is higher, because when "no ..." is used, contradictory rules like "X no X" won't get compiled.
  pushable_type is_tip_or_packed floor [> pushable:pushable_type:is_tip_or_packed:directions:floor no _through_hole:pushable_type:floor:>:next_space | pushable:sausage:not_tip_or_packed:^:floor no _force:simple:>:sausage:floor:is_countered no _force:slip:v:sausage:floor:is_countered no _force:insert:>:sausage:floor:uncountered] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor | pushable:sausage:not_tip_or_packed:^:floor _force:simple:>:sausage:floor:uncountered _force:slip:v:sausage:floor:uncountered _calculate_moving_direction:sausage:floor] gosub calculate_moving_direction
    ( [Rotation A] [Slip] )
  pushable_type is_tip_or_packed floor [> pushable:pushable_type:is_tip_or_packed:directions:floor no _through_hole:pushable_type:floor:>:next_space | pushable:sausage:not_tip_or_packed:^:floor no _force:slip:v:sausage:floor:is_countered no _force:insert:>:sausage:floor:uncountered] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor | pushable:sausage:not_tip_or_packed:^:floor _force:slip:v:sausage:floor:uncountered _calculate_moving_direction:sausage:floor] gosub calculate_moving_direction
    ( [Rotation A] [Simple] )
  pushable_type is_tip_or_packed floor [> pushable:pushable_type:is_tip_or_packed:directions:floor no _through_hole:pushable_type:floor:>:next_space | pushable:sausage:not_tip_or_packed:^:floor no _force:simple:>:sausage:floor:is_countered no _force:insert:>:sausage:floor:uncountered] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor | pushable:sausage:not_tip_or_packed:^:floor _force:simple:>:sausage:floor:uncountered _calculate_moving_direction:sausage:floor] gosub calculate_moving_direction
    ( [Rotation B] [Simple + Slip] )
  pushable_type is_tip_or_packed floor [> pushable:pushable_type:is_tip_or_packed:directions:floor no _through_hole:pushable_type:floor:>:next_space | pushable:sausage:not_tip_or_packed:v:floor no _force:simple:>:sausage:floor:is_countered no _force:slip:^:sausage:floor:is_countered no _force:insert:>:sausage:floor:uncountered] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor | pushable:sausage:not_tip_or_packed:v:floor _force:simple:>:sausage:floor:uncountered _force:slip:^:sausage:floor:uncountered _calculate_moving_direction:sausage:floor] gosub calculate_moving_direction
    ( [Rotation B] [Slip] )
  pushable_type is_tip_or_packed floor [> pushable:pushable_type:is_tip_or_packed:directions:floor no _through_hole:pushable_type:floor:>:next_space | pushable:sausage:not_tip_or_packed:v:floor no _force:slip:^:sausage:floor:is_countered no _force:insert:>:sausage:floor:uncountered] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor | pushable:sausage:not_tip_or_packed:v:floor _force:slip:^:sausage:floor:uncountered _calculate_moving_direction:sausage:floor] gosub calculate_moving_direction
    ( [Rotation B] [Simple] )
  pushable_type is_tip_or_packed floor [> pushable:pushable_type:is_tip_or_packed:directions:floor no _through_hole:pushable_type:floor:>:next_space | pushable:sausage:not_tip_or_packed:v:floor no _force:simple:>:sausage:floor:is_countered no _force:insert:>:sausage:floor:uncountered] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor | pushable:sausage:not_tip_or_packed:v:floor _force:simple:>:sausage:floor:uncountered _calculate_moving_direction:sausage:floor] gosub calculate_moving_direction
  ( - Push packed sausage )
  floor [> pushable:pushable_type:is_tip_or_packed:directions:floor | pushable:sausage:tip_or_packed:directions:floor no _force:simple:>:sausage:floor:is_countered] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor | pushable:sausage:tip_or_packed:directions:floor _force:simple:>:sausage:floor:uncountered _calculate_moving_direction:sausage:floor] gosub calculate_moving_direction

  ( II Blocked )
  
  ( Blocked by wall )
  force_type pushable_type floor [_force:force_type:>:pushable_type:floor:uncountered > pushable:pushable_type:is_tip_or_packed:directions:floor | fixed:fixed_type:floor] -> [_force:force_type:>:pushable_type:floor:countered > pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor | fixed:fixed_type:floor] gosub calculate_moving_direction
  ( Blocked by another pushable ) // When that another pushable has a countered force of that direction.
    ( - Blocked by same pushable_type in opposing space )
  force_type pushable_type floor [_force:force_type:>:pushable_type:floor:uncountered > pushable:pushable_type:is_tip_or_packed:directions:floor | _force:force_type_2:>:pushable_type:floor:countered] -> [_force:force_type:>:pushable_type:floor:countered > pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor | _force:force_type_2:>:pushable_type:floor:countered] gosub calculate_moving_direction
    ( - Blocked by opposite pushable_type in opposing space ) // Unless current pushable has pierce or through_hole:...:next_space, because these two only apply to opposite pushable_type
  pushable_type floor [_force:force_type:>:pushable_type:floor:uncountered > pushable:pushable_type:is_tip_or_packed:directions:floor no _pierce:pushable_type:floor:> no _through_hole:pushable_type:floor:>:next_space | _force:force_type_2:>:opposite_pushable_type:floor:countered] -> [_force:force_type:>:pushable_type:floor:countered > pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor | _force:force_type_2:>:opposite_pushable_type:floor:countered] gosub calculate_moving_direction
    ( - Blocked by a inserted pushable in the same space ) // Unless current pushable has pierce or through_hole:...:this_space
  pushable_type floor [_force:force_type:>:pushable_type:floor:uncountered > pushable:pushable_type:is_tip_or_packed:directions:floor no _through_hole:pushable_type:floor:>:this_space _force:force_type_2:>:opposite_pushable_type:floor:countered] -> [_force:force_type:>:pushable_type:floor:countered > pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor _force:force_type_2:>:opposite_pushable_type:floor:countered] gosub calculate_moving_direction
endloop

( sfx )
  ( - Move )
  [orthogonal pushable:pushable_type:is_tip_or_packed:directions:floor] -> [orthogonal pushable:pushable_type:is_tip_or_packed:directions:floor] sfx0
  ( - Block )
  [stationary pushable:stick:tip_or_packed:directions:floor _input:directions] -> [pushable:stick:tip_or_packed:directions:floor _input:directions] sfx1
  ( - Slip )
  floor [> pushable:sausage:not_tip_or_packed:<:floor _force:slip:>:sausage:floor:uncountered] -> [> pushable:sausage:not_tip_or_packed:<:floor _force:slip:>:sausage:floor:uncountered] sfx2
  ( - Insert )
    ( · Into )
    floor [> pushable:stick:is_tip_or_packed:directions:floor | stationary pushable:sausage:not_tip_or_packed:directions:floor] -> [> pushable:stick:is_tip_or_packed:directions:floor |  pushable:sausage:not_tip_or_packed:directions:floor] sfx3
    ( · Out )
    floor [> pushable:stick:is_tip_or_packed:directions:floor stationary pushable:sausage:not_tip_or_packed:directions:floor] -> [> pushable:stick:is_tip_or_packed:directions:floor pushable:sausage:not_tip_or_packed:directions:floor] sfx3


///////////////////////////////////////////////////
///////////////////////////////////////////////////
(                   Late rules                    )
///////////////////////////////////////////////////
///////////////////////////////////////////////////

( Remove temp stuff )
( - Remove input )
late [_input:directions] -> []
( - Remove forces )
late [_force:force_type:directions:pushable_type:floor:is_countered] -> []
late [_temp_force_direction:force_type:directions:pushable_type:floor] -> []
( - Remove insert_force_source )
late [_insert_force_source:pushable_type:floor] -> []
( - Remove pierce & through_hole )
late [_pierce:pushable_type:floor:directions] -> []
late [_through_hole:pushable_type:floor:directions:which_space] -> []


( Do grill & check if can grill )
  ( - Do grill )
  late low_floor [_do_again:grill] [fixed:grill:low_floor pushable:stick:is_tip_or_packed:directions:higher_floor no pushable:sausage:not_tip_or_packed:directions:higher_floor] -> [_do_again:grill] [fixed:grill:low_floor] sfx7
  late [_do_again:grill] -> []
  ( - Check if can grill )
  late low_floor [_temp_variable_holder no _do_again:grill] [fixed:grill:low_floor pushable:stick:is_tip_or_packed:directions:higher_floor no pushable:sausage:not_tip_or_packed:directions:higher_floor] -> [_temp_variable_holder _do_again:grill] [fixed:grill:low_floor pushable:stick:is_tip_or_packed:directions:higher_floor] again


( Do fall & check if can fall )
// There could be multiple falls.
// If the first fall is valid, then fires another process turn. But later valid falls don't fire that.
// This difference means that I have to take the logic of the first fall out of the fall loop.
startloop
  ( Calculate supported:floor )
    ( - Supported by fixed below )
    late low_floor [fixed:fixed_type:low_floor pushable:pushable_type:is_tip_or_packed:directions:higher_floor] -> [fixed:fixed_type:low_floor pushable:pushable_type:is_tip_or_packed:directions:higher_floor _supported:higher_floor]
    ( - Supported by supported below )
    // There is no "supported by insert" because they share the same supported:floor.
    + late low_floor [_supported:low_floor pushable:pushable_type:is_tip_or_packed:directions:higher_floor] -> [_supported:low_floor pushable:pushable_type:is_tip_or_packed:directions:higher_floor _supported:higher_floor]
    ( - Spread supported )
    + late pushable_type floor [pushable:pushable_type:is_tip_or_packed:<:floor _supported:floor | pushable:pushable_type:is_tip_or_packed:>:floor] -> [pushable:pushable_type:is_tip_or_packed:<:floor _supported:floor | pushable:pushable_type:is_tip_or_packed:>:floor _supported:floor]
  ( Do fall )
    ( - Fall into void below )
    late [_do_again:fall] [pushable:pushable_type:is_tip_or_packed:directions:floor_0] -> [_do_again:fall] [] sfx6
    ( - Fall into space below )
    // When 2 objects are on top of each other, make the bottom one fall first. So no pushable:...:lower_floor.
    // After something falls, add a _just_fell to that target space so it won't fall again.
    late pushable_type is_tip_or_packed directions high_floor [_do_again:fall] [pushable:pushable_type:is_tip_or_packed:directions:high_floor no _supported:high_floor no _just_fell:high_floor no pushable:pushable_type:is_tip_or_packed_2:directions_2:lower_floor] ->[_do_again:fall] [pushable:pushable_type:is_tip_or_packed:directions:lower_floor _just_fell:lower_floor]
    ( PLay sound if it falls onto ground )
    late high_floor [_just_fell:high_floor fixed:fixed_type:lower_floor] -> [_just_fell:high_floor fixed:fixed_type:lower_floor] sfx5
    ( PLay sound if it falls onto something supported )
    late high_floor [_just_fell:high_floor _supported:lower_floor] -> [_just_fell:high_floor _supported:lower_floor] sfx5
    late [_just_fell:floor] -> []
  ( Check if can fall )
    ( - Fall into space below )
    late high_floor [_temp_variable_holder no _can_fall_again] [pushable:pushable_type:is_tip_or_packed:directions:high_floor no _supported:high_floor] -> [_temp_variable_holder _can_fall_again] [pushable:pushable_type:is_tip_or_packed:directions:high_floor] 
    ( - Fall into void below )
    late [_temp_variable_holder no _can_fall_again] [pushable:pushable_type:is_tip_or_packed:directions:floor_0] -> [_temp_variable_holder _can_fall_again] [pushable:pushable_type:is_tip_or_packed:directions:floor_0]
endloop
( Clear _supported )
late [_supported:floor] -> []
( Order a scoreboard update )
late [_do_again:fall] -> [_do_again:fall _update_scoreboard]
( _can_again -> _do_again )
late [_do_again:fall] -> []
late [_can_fall_again] -> [_do_again:fall] again


( Do pack & check if can pack )
  ( - Calculate _not_eligible_for_pack )
    ( · Not one floor above goal )
    late [pushable:sausage:not_tip_or_packed:directions:floor_0] -> [pushable:sausage:not_tip_or_packed:directions:floor_0 _not_eligible_for_pack:floor_0]
    late high_floor [pushable:sausage:not_tip_or_packed:directions:high_floor no goal:lower_floor] -> [pushable:sausage:not_tip_or_packed:directions:high_floor _not_eligible_for_pack:high_floor]
    ( · Has stick inside )
    late floor [pushable:sausage:not_tip_or_packed:directions:floor pushable:stick:is_tip_or_packed:directions:floor] -> [pushable:sausage:not_tip_or_packed:directions:floor pushable:stick:is_tip_or_packed:directions:floor _not_eligible_for_pack:floor]
    ( · Spread )
    late floor [pushable:sausage:not_tip_or_packed:<:floor _not_eligible_for_pack:floor | pushable:sausage:not_tip_or_packed:>:floor] -> [pushable:sausage:not_tip_or_packed:<:floor _not_eligible_for_pack:floor | pushable:sausage:not_tip_or_packed:>:floor _not_eligible_for_pack:floor]
  ( - Do pack )
  late directions floor [_do_again:pack] [pushable:sausage:not_tip_or_packed:directions:floor no _not_eligible_for_pack:floor] -> [_do_again:pack] [pushable:sausage:tip_or_packed:directions:floor] sfx4
  ( - Order a scoreboard update )
  late [_do_again:pack] -> [_do_again:pack _update_scoreboard]
  late [_do_again:pack] -> []
  ( - Check if can pack )
  late floor [_temp_variable_holder no _do_again:pack] [pushable:sausage:not_tip_or_packed:directions:floor no _not_eligible_for_pack:floor] -> [_temp_variable_holder _do_again:pack] [pushable:sausage:not_tip_or_packed:directions:floor] again
  ( - Clear _not_eligible_for_pack )
  late [_not_eligible_for_pack:floor] -> []


( Win )
// Check win process is in "Update scoreboard"
late low_count [_temp_variable_holder _win_count:low_count no _already_counted] -> [_temp_variable_holder _win_count:next_count _already_counted] again
late [_temp_variable_holder _win_count:3] -> [_temp_variable_holder] win
late [_already_counted] -> []


( Update scoreboard )
  ( - Clear whole scoreboard )
  late [_update_scoreboard] [scoreboard_filled] -> [_update_scoreboard] [scoreboard_empty]
  startloop
    ( - Find a packed suausage that's not already calculated )
    // I use _scoreboard_calculation_spread_ongoing to make sure only one tile is picked per loop.
    late floor [_temp_variable_holder _update_scoreboard no _scoreboard_calculation_spread_ongoing] [pushable:sausage:tip_or_packed:directions:floor no _already_calculated_for_scoreboard:floor] -> [_temp_variable_holder _update_scoreboard _scoreboard_calculation_spread_ongoing] [pushable:sausage:tip_or_packed:directions:floor _already_calculated_for_scoreboard:floor]
    ( - Spread _already_calculated_for_scoreboard within sausage )
    late floor [pushable:sausage:tip_or_packed:<:floor _already_calculated_for_scoreboard:floor | pushable:sausage:tip_or_packed:>:floor] -> [pushable:sausage:tip_or_packed:<:floor _already_calculated_for_scoreboard:floor | pushable:sausage:tip_or_packed:>:floor _already_calculated_for_scoreboard:floor]
    ( - Add one sausage to scoreboard )
    // If scoreboard is already full, then _scoreboard_calculation_spread_ongoing persists into the next loop, then no rule is executed there.
      ( · Rightmost sausage in scoreboard )
      late right [_temp_variable_holder _scoreboard_calculation_spread_ongoing] [_rightmost_scoreboard scoreboard_empty] -> [_temp_variable_holder] [_rightmost_scoreboard scoreboard_filled]
      ( · Non-rightmost sausage in scoreboard )
      late right [_temp_variable_holder _scoreboard_calculation_spread_ongoing] [scoreboard_empty | scoreboard_filled] -> [_temp_variable_holder] [scoreboard_filled | scoreboard_filled]
  endloop
  ( - Check win )
  late right [_temp_variable_holder _update_scoreboard] [no scoreboard_empty no scoreboard_filled | scoreboard_filled] -> [_temp_variable_holder _update_scoreboard _win_count:0] [| scoreboard_filled] again
  ( - Remove temp variables )
  late [_already_calculated_for_scoreboard:floor] -> []
  late [_scoreboard_calculation_spread_ongoing] -> []
  late [_update_scoreboard] -> []
    

( Add stick bottom sprite when inside sausage )
late floor [pushable:stick:tip_or_packed:up:floor] -> [pushable:stick:tip_or_packed:up:floor _stick_bottom:floor]
late floor [pushable:stick:not_tip_or_packed:down:floor] -> [pushable:stick:not_tip_or_packed:down:floor _stick_bottom:floor]



///////////////////////////////////////////////////
///////////////////////////////////////////////////
(                  Subroutines                    )
///////////////////////////////////////////////////
///////////////////////////////////////////////////

subroutine calculate_moving_direction
  ( Save and clear old moving direction )
  pushable_type floor [> pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor] -> [stationary pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor _old_moving_direction:pushable_type:floor:>]
  ( Calculate moving direction for each type of force ) // Using temp_force_direction:force_type:directions.
  // For example, when there is a uncountered force driving right,
  // 1 Don't move right when there's a left force, whether countered or not.
  // 2 Only move right when there is no up/down force, or, when there is only one countered up/down force, or, when there are both up & down forces. (i.e. When there are no vertical movement candidate.)
  force_type directions pushable_type floor [_force:force_type:directions:pushable_type:floor:uncountered _calculate_moving_direction:pushable_type:floor no _force:force_type:opposite_direction:pushable_type:floor:is_countered no _force:force_type:clockwise_direction:pushable_type:floor:is_countered no _force:force_type:counter_clockwise_direction:pushable_type:floor:is_countered] -> [_force:force_type:directions:pushable_type:floor:uncountered _calculate_moving_direction:pushable_type:floor _temp_force_direction:force_type:directions:pushable_type:floor]
  force_type directions pushable_type floor [_force:force_type:directions:pushable_type:floor:uncountered _force:force_type:clockwise_direction:pushable_type:floor:countered _calculate_moving_direction:pushable_type:floor no _force:force_type:opposite_direction:pushable_type:floor:is_countered no _force:force_type:counter_clockwise_direction:pushable_type:floor:is_countered] -> [_force:force_type:directions:pushable_type:floor:uncountered _force:force_type:clockwise_direction:pushable_type:floor:countered _calculate_moving_direction:pushable_type:floor _temp_force_direction:force_type:directions:pushable_type:floor]
  force_type directions pushable_type floor [_force:force_type:directions:pushable_type:floor:uncountered _force:force_type:counter_clockwise_direction:pushable_type:floor:countered _calculate_moving_direction:pushable_type:floor no _force:force_type:opposite_direction:pushable_type:floor:is_countered no _force:force_type:clockwise_direction:pushable_type:floor:is_countered] -> [_force:force_type:directions:pushable_type:floor:uncountered _force:force_type:counter_clockwise_direction:pushable_type:floor:countered _calculate_moving_direction:pushable_type:floor _temp_force_direction:force_type:directions:pushable_type:floor]
  force_type directions pushable_type floor [_force:force_type:directions:pushable_type:floor:uncountered _force:force_type:clockwise_direction:pushable_type:floor:is_countered _force:force_type:counter_clockwise_direction:pushable_type:floor:is_countered _calculate_moving_direction:pushable_type:floor no _force:force_type:opposite_direction:pushable_type:floor:is_countered] -> [_force:force_type:directions:pushable_type:floor:uncountered _force:force_type:clockwise_direction:pushable_type:floor:is_countered _force:force_type:counter_clockwise_direction:pushable_type:floor:is_countered _calculate_moving_direction:pushable_type:floor _temp_force_direction:force_type:directions:pushable_type:floor]
  ( Calculate final moving direction, using insert push )
  pushable_type floor [pushable:pushable_type:is_tip_or_packed:directions:floor _temp_force_direction:insert:>:pushable_type:floor _calculate_moving_direction:pushable_type:floor] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor _temp_force_direction:insert:>:pushable_type:floor _calculate_moving_direction:pushable_type:floor _spread:pushable_type:floor]
  ( Calculate final moving direction, using slip push )
  pushable_type floor [pushable:pushable_type:is_tip_or_packed:directions:floor _temp_force_direction:slip:>:pushable_type:floor _calculate_moving_direction:pushable_type:floor no _temp_force_direction:insert:directions:pushable_type:floor] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor _temp_force_direction:slip:>:pushable_type:floor _calculate_moving_direction:pushable_type:floor _spread:pushable_type:floor]
  ( Calculate final moving direction, using simple push)
  pushable_type floor [pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor _temp_force_direction:simple:>:pushable_type:floor no _temp_force_direction:insert:directions:pushable_type:floor no _temp_force_direction:slip:directions:pushable_type:floor] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor _temp_force_direction:simple:>:pushable_type:floor _spread:pushable_type:floor]
  
  ( Clear old_moving_direction ) // If new direction is the same as it.
  pushable_type floor [> pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor _old_moving_direction:pushable_type:floor:>] -> [> pushable:pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type:floor]
  ( Clear "temp_force_direction:force_type" & "calculate_moving_direction", add "spread" )
  [_temp_force_direction:force_type:directions:pushable_type:floor] -> []
  pushable_type floor [_calculate_moving_direction:pushable_type:floor] -> [_spread:pushable_type:floor] gosub spread



( Spread moving direction & force within rigid )
// Why do I need _spread:pushable_type:floor?
// Because when a sausage has a tile with a force and another without force, how do you know whether to spread the force or spread the "no force"?
subroutine spread
  startloop
    ( Spread moving )
    pushable_type floor [orthogonal pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor | pushable:pushable_type:is_tip_or_packed:>:floor no _spread:pushable_type:floor] -> [orthogonal pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor | orthogonal pushable:pushable_type:is_tip_or_packed:>:floor _spread_next:pushable_type:floor]
    ( Spread not moving )
    pushable_type floor [stationary pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor | pushable:pushable_type:is_tip_or_packed:>:floor no _spread:pushable_type:floor] -> [stationary pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor | stationary pushable:pushable_type:is_tip_or_packed:>:floor _spread_next:pushable_type:floor]
    ( Spread force )
    // [BUG]? switching the last two objects breaks the rule, when there is a tag as a rule prefix
    force_type directions pushable_type is_countered floor  [_force:force_type:directions:pushable_type:floor:is_countered pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor | pushable:pushable_type:is_tip_or_packed:>:floor no _spread:pushable_type:floor] -> [_force:force_type:directions:pushable_type:floor:is_countered pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor | pushable:pushable_type:is_tip_or_packed:>:floor _force:force_type:directions:pushable_type:floor:is_countered _spread_next:pushable_type:floor]
    ( Spread no force )
    force_type directions pushable_type is_countered floor [pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor no _force:force_type:directions:pushable_type:floor:is_countered | pushable:pushable_type:is_tip_or_packed:>:floor no _spread:pushable_type:floor] -> [pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor | pushable:pushable_type:is_tip_or_packed:>:floor no _force:force_type:directions:pushable_type:floor:is_countered _spread_next:pushable_type:floor]
    ( Spread old_moving_direction )
    directions pushable_type floor [_old_moving_direction:pushable_type:floor:directions pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor | pushable:pushable_type:is_tip_or_packed:>:floor no _spread:pushable_type:floor] -> [_old_moving_direction:pushable_type:floor:directions pushable:pushable_type:is_tip_or_packed:<:floor _spread:pushable_type:floor | pushable:pushable_type:is_tip_or_packed:>:floor _old_moving_direction:pushable_type:floor:directions _spread_next:pushable_type:floor]
    
    pushable_type floor [_spread_next:pushable_type:floor] -> [_spread:pushable_type:floor]
  endloop
  [_spread:pushable_type:floor] -> []
  
  ( Remove force from pushables in the old moving direction )
  [_old_moving_direction:pushable_type:floor:directions] -> [_old_moving_direction:pushable_type:floor:directions] gosub remove_force_from_old_moving_direction
  

// How to deal with blocked objects:
// In reality, forces are a result of two objects constantly squeezing into each other. When an object is blocked, due to the order of their positions (there is an position order of the squeezed side even if they are all inserted into each other), the object in source direction is blocked, and the object in destination direction is no longer squeezed.
// So the most realistic way to implement the rule is making a tiny squeeze from the player each loop and then spread the squeeze, while the object blocked last loop are still blocked and the squeezes last loop won't be carried to next loop.
// But does it work? Refer to the 3rd case in edge_cases.png (not public).
// This game uses another "self-correcting" way to implement the rule.
subroutine remove_force_from_old_moving_direction
  ( Remove outgoing "insert" force )
  pushable_type floor [_old_moving_direction:pushable_type:floor:> pushable:opposite_pushable_type:is_tip_or_packed:directions:floor _force:insert:>:opposite_pushable_type:floor:is_countered _insert_force_source:pushable_type:floor] -> [_old_moving_direction:pushable_type:floor:> pushable:opposite_pushable_type:is_tip_or_packed:directions:floor _calculate_moving_direction:opposite_pushable_type:floor] gosub calculate_moving_direction
  ( Remove all simple/slip force from facing tile in old moving direction )
  pushable_type_2 floor [_old_moving_direction:pushable_type:floor:> | pushable:pushable_type_2:is_tip_or_packed:directions:floor _force:force_type_simple_or_slip:directions:pushable_type_2:floor:is_countered no _old_moving_direction:pushable_type_2:floor:>] -> [_old_moving_direction:pushable_type:floor:> | pushable:pushable_type_2:is_tip_or_packed:directions:floor _calculate_moving_direction:pushable_type_2:floor] gosub calculate_moving_direction
  [_old_moving_direction:pushable_type:floor:directions] -> []

=======     
LEVELS
=======

section 1-1 It's Oily
level 1-1 It's Oily
message 1-1 It's Oily
################
################
################
################
##.....#########
##.t..........##
##.b..........##
##.....{}.....##
#########.....##
#########xx#####
#########..#####
################
①##############$

section 1-2 No Escape
level 1-2 No Escape
message 1-2 No Escape
#############
#############
#############
#############
##...{}.#####
##.......####
##.......xx##
##.......####
###.....#####
###t#########
###b#########
#############
②###########$

section 1-3 Get It Off
level 1-3 Get It Off
message 1-3 Get It Off
#############
#############
#############
#############
####....#..##
####.......##
####.......##
##←>....#..##
##↓x.......##
########...##
#############
③###########$

section 1-4 Flip-flop
level 1-4 Flip-flop
message 1-4 Flip-flop
#############
#############
#############
#############
##t........##
##b..nxx...##
#####u##..###
##...{}....##
##...#.....##
##.........##
###.......###
#############
④###########$

// Hard, because people are trying to insert.
section 1-5 Drawbridge
level 1-5 Drawbridge
message 1-5 Drawbridge
############
############
############
############
###xxxxxx###
###......###
##........##
##........##
###..{}..###
###..tn..###
####.bu.####
####....####
############
⑤##########$

section 1-6 Out of Order
level 1-6 Out of Order
message 1-6 Out of Order
###############
###############
###############
###############
###........####
##x.t.n.{}.xx##
##x.b.u....####
###........####
###############
⑥############$$

section 1-7 Odd Gap
level 1-7 Odd Gap
message 1-7 Odd Gap
##################
##################
##################
##################
############....##
####...___......##
##x<}..___..{}.t##
##xx...___.....b##
####...___..{}..##
############....##
##################
⑦################$

// Hard, because pulling the sausage up at the left/right matters.
section 1-8 Claw Hammer
level 1-8 Claw Hammer
message 1-8 Claw Hammer
##############
##############
##############
##############
####......####
###{}.....####
##t.......xx##
##b.......xx##
###{}.....####
####......####
##############
⑧###########$$

section 1-9 Bowling Alley
level 1-9 Bowling Alley
message 1-9 Bowling Alley
##############
##############
##############
##############
######xx######
#####....#####
#####....#####
#####{}{}#####
#####....#####
#####....#####
#####.t..#####
######b.######
##############
⑨############$

section 2-1 Afterlife
level 2-1 Afterlife
message 2-1 Afterlife
###########
###########
###########
###########
###..n.x###
###..u.x###
###.#######
###xx.#####
###...#####
###...#####
###{}######
###..######
###.t######
###.b######
###########
⑩########$$

section 2-2 Crossroad
level 2-2 Crossroad
message 2-2 Crossroad
###########
###########
###########
###########
##....t####
##....b####
##.##{}####
##...xxn.##
##...xxu.##
#####..#.##
#####..#.##
#####....##
#####....##
###########
⑪########$$

section 2-3 Production Line
level 2-3 Production Line
message If you feel stuck, you can press ESC, then select "go to level select screen" to play another level.
message Completing a level unlocks a new one.
message 2-3 Production Line
###############
###############
###############
###############
######oooo#####
######oooo#####
######oooo#####
######..xx#####
######....#####
######..{}#####
######..{}#####
######....#####
#####....######
#####..t.######
#####..b.######
#####....######
###############
⑫############$$

section 2-4 Where?
level 2-4 Where?
message 2-4 Where?
#############
#############
#############
#############
##...{}...###
##xxx...._###
##xxx...__###
#####..___###
#####oo___###
##xxxooo_..##
##xxxoo....##
##xxx...n..##
##xxx...u..##
####......###
####..#######
###....######
###t...######
###b...######
#############
⑬##########$$

section 2-5 Hiking Basics
level 2-5 Hiking Basics
message 2-5 Hiking Basics
################
################
################
################
##xxnn...##...##
##xxuu...##...##
####.....##...##
####ooooo##.#.##
####ooooo...xx##
####ooooo#.#xx##
##...{}n....xx##
##.....u....xx##
##t.........xx##
##b.........xx##
################
⑭############$$$

// I made it so that players can build the bridge anywhere and complete the level, because I don't want it to be another "find the right spot" puzzle. That would be boring.
section 2-6 Team Building
level 2-6 Team Building
message 2-6 Team Building
##############
##############
##############
##############
#####xxxx#####
#####xxxx#####
#####xxxx#####
#####xxxx#####
####n...{}####
####u.....####
####t.....####
####b...__####
####..____####
####._____####
####______####
####_____.####
####___...####
####__....####
####_..{>x####
##############
⑮##########$$$

section 2-7 Sharing
level 2-7 Sharing
message 2-7 Sharing
#############
#############
#############
#############
##xxx___xxx##
###_______###
###___α___###
##....u....##
##{}.....{}##
##t........##
##b........##
#############
⑯##########$$

section 2-8 Well, Where?
level 2-8 Well, Where?
message 2-8 Well, Where?
#############
#############
#############
#############
##...{}...###
##xxx...._###
##xxx...__###
#####..___###
#####oo___###
##xxxooo_..##
##xxxoo....##
##xxx...{}.##
##xxx......##
####......###
####..#######
###....######
###t...######
###b...######
#############
⑰##########$$

section 2-9 Far Reach
level 2-9 Far Reach
message 2-9 Far Reach
#############
#############
#############
#############
####..t..####
####nnb..####
####uu.{}####
####.....####
####_____####
####ooooo####
####ooooo####
####ooooo####
###_______###
###_______###
###×××.×××###
###×××.×××###
###.._._..###
###.......###
#############
⑱#########$$$
( Old version:
################
################
################
###.no__..######
##..uo___.######
##oooo_______###
##oooo_______###
###.....______##
###___....____##
###___.....___##
#######....×××##
###{}.n....×××##
###...u....×××##
###t.....##×××##
###b.....#######
################
⑱############$$$
)


section 3-1 Grill
level 3-1 Grill
message 3-1 Grill
##############
##############
##############
##############
###xx##+[}xx##
##.{}.#.....##
##.........t##
##....#....b##
##############
❶###########$$

section 3-2 Inject
level 3-2 Inject
message 3-2 Inject
#########
#########
#########
#########
###+++###
##++*++##
##++*++##
##+++++##
##..+..##
##.....##
##...n.##
##.{}u.##
##t....##
##b....##
#########
❷#######$

section 3-3 Placeholder
level 3-3 Placeholder
message 3-3 Placeholder
##############
##############
##############
##############
##..........##
##..........##
##..______..##
##..___oo_..##
##.._∩×«β›..##
##.._v____..##
##..______..##
##.._ſ____..##
##.._ɩ____..##
##..........##
##..........##
##############
❸###########$$

section 3-4 Corner
level 3-4 Corner
message 3-4 Corner
############
############
############
############
#######xxx##
#######xxx##
#######___##
##...##___##
##....____##
##....____##
##..nn#___##
##..uu.___##
##..{}....##
##+.....t.##
##+.....b.##
############
❹##########$

section 3-5 Trojan
level 3-5 Trojan
message 3-5 Trojan
##########
##########
##########
##########
####.#####
####..####
####{}####
####xx####
###....###
###....###
###.##.###
###....###
###_.._###
###____###
##._.._.##
##+.nn.+##
##.tuu..##
##.b....##
##########
❺########$
( Old version:
################
################
################
###....##××××###
##.....+_____×##
##...n.+__‹›_×##
##t..u.+_____×##
##b....+_____×##
################
%#############$$)

section 3-6 Ditches
level 3-6 Ditches
message 3-6 Ditches
####################
####################
####################
####################
######...........###
######...._......###
#####.♯..._.......##
##××__‹›‹›_____...##
##..#._..._._._...##
#####.^________...##
####__v..._._.....##
####_._..××___.{}.##
####______._._.{}.##
#####......___....##
#####...nn.....t..##
######..uu.....b.###
######...........###
####################
❻#################$$

section 3-7 Odd Goal
level 3-7 Odd Goal
message 3-7 Odd Goal
############
############
############
############
####oooo####
####♯♯♯♯####
####♯♯♯♯####
##..♯±±♯..##
##..♯♯♯♯..##
##..♯♯♯♯..##
##..♯♯♯♯..##
##..{}{}..##
##...{}...##
##.t......##
##.b......##
############
❼##########$

section 3-8 Bottleneck
level 3-8 Bottleneck
message 3-8 Bottleneck
// Why not remove the top target of the 3 bottom-left targets, making the solution more obscure?
// Because if so, then the stick has to go out of the horizontal sausage in order to pack the vertical sausage, but going out of the horizontal sausage is part of the solution.
################
################
################
################
##_____×××######
##________..####
##..._____.++###
##{}....__.++t##
##..#####....b##
##.....##.n...##
##.....##.u..###
#####x###....###
#####x.......###
#####x......####
################
❽#############$$
( Not working, because the vertical sausage can enter the left area.
################
################
##__############
##_____#########
##_____×××.#####
##..._____..####
##{}...___..####
##..#####....###
##...####...t###
##....###.n.b###
##.....##.u..###
#####x###....###
#####x......####
#####x......####
################
##############$$
)

section 3-9 Sound Test
level 3-9 Sound Test
message 3-9 Sound Test
##################
##################
##################
##################
##oo#-------_××o##
##oo#γ---γ-#oooo##
##oo#ε---ε-#oooo##
##oo#--ζδ--#oooo##
##oo###--###oooo##
##ooooo__ooooooo##
##ooooo__ooooooo##
##ooooo__ooooooo##
#######__#########
#######__.....t###
#######♯♯.....b###
##################
❾################$

message Wow, you completed the game!